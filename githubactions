name: EKS Cluster Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_DEFAULT_REGION: ap-south-1

jobs:
  create-eks-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.2 # Change to your required version

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

  deploy-to-eks:
    needs: create-eks-cluster
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Configure kubectl
        run: aws eks update-kubeconfig --name eks-creation1 --region ${{ env.AWS_DEFAULT_REGION }}

      - name: Apply Kubernetes ConfigMap
        run: kubectl apply -f kubernetes/html-configmap.yaml

      - name: Apply Kubernetes Deployment
        run: kubectl apply -f kubernetes/deployment.yaml

      - name: Apply Kubernetes Service
        run: kubectl apply -f kubernetes/service.yaml
